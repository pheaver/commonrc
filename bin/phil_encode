#!/bin/bash

# ------------------------------------------------------------------------------

if [ $# -ne 1 ]; then
    echo Bad number of arguments
    exit 1
fi

src="${1}"

if [ ! -e "${src}" ]; then
    echo "${src} does not exist"
    exit 1
fi

src_base="${src%.*}"
src_ext="${src/${src_base}/}"
dst_base="${src_base}"

test -z ${format} && format=mp4
dst="${dst_base}.${format}"

test -z ${abitrate} && abitrate=64k

# ------------------------------------------------------------------------------

# Notes
# Videos from camera have this profile:
#   Duration: 00:00:31.03, start: 0.000000, bitrate: 7682 kb/s
#     Stream #0.0: Video: mjpeg, yuvj422p, 640x480, 30 tbr, 30 tbn, 30 tbc
#     Stream #0.1: Audio: pcm_u8, 11024 Hz, 1 channels, u8, 88 kb/s

# Notes
#  - videos from camera are 88kb/s audio
#  - for camera videos, use -ab 64k, for other use -ab 128k
#  - ipod resolution is 320x240, but we want original size for other uses.

# -s WIDTHxHEIGHT
# -aspect WIDTH:HEIGHT

# -ar 44100
# -ab 128
# -maxrate 2500
# -b 1800
# -vcodec xvid
# -s 320x240

# ------------------------------------------------------------------------------
# mpeg4

function do_mpeg4()
{
    ffmpeg \
        -i "${src}" \
        -vcodec mpeg4 -qmin 3 -qmax 7 -r 30 \
        -acodec libfaac -ab ${abitrate} \
        -y -f ${format} "${dst}" || exit 1
}

# ------------------------------------------------------------------------------
# h264

function do_x264()
{
    test -z ${vbitrate} && vbitrate=2048k
    test -z ${threads} && threads=0

    # ultrafast, superfast, veryfast, faster, fast, medium,
    # slow, slower, veryslow, placebo.
    # placebo is god-awful slow, but veryslow is bearable.
    test -z ${encoding_speed} && encoding_speed=slower

    test -z ${preset} && preset=-vpre ipod640

    # dst="${dst_base}_${encoding_speed}_${vbitrate}.${format}"

    ffmpeg \
        -i "${src}" -an -pass 1 \
        -vcodec libx264 -vpre ${encoding_speed}_firstpass ${preset} \
        -b ${vbitrate} -bt ${vbitrate} \
        -threads ${threads} -y -f ${format} /dev/null || exit 1

    ffmpeg \
        -i "${src}" -pass 2 \
        -acodec libfaac -ab ${abitrate} \
        -vcodec libx264 -vpre ${encoding_speed} ${preset} \
        -b ${vbitrate} -bt ${vbitrate} \
        -threads ${threads} -y -f ${format} "${dst}" || exit 1
}

# ------------------------------------------------------------------------------

test -z ${vcodec} && vcodec=x264

case ${vcodec} in
    x264 | h264 | H264 | libx264 )
        do_x264 ;;
    mpg | mpeg4 | mpeg | xvid )
        do_mpeg4 ;;
    *)
        echo "Invalid video codec: ${vcodec}"
        exit 1;;
esac

# ------------------------------------------------------------------------------
# copy timestamp

# cptime.sh "${src}" "${dst}" || exit 1

# ------------------------------------------------------------------------------
